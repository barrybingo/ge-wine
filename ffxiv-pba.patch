From ba4037849bb33b1bb63996e5f1492ac558d41343 Mon Sep 17 00:00:00 2001
From: Firerat <firer4t@googlemail.com>
Date: Mon, 19 Mar 2018 21:37:35 +0000
Subject: [PATCH] wined3d: GEO and CB heap size override envvars

add inital __PBA_GEO_HEAP and __PBA_CB_HEAP override
it is dumb in that it will not check if given values are a good idea.
But should be useful for troubleshooting
exanple
https://github.com/acomminos/wine-pba/issues/36#issuecomment-372079218
---
 dlls/wined3d/device.c | 24 +++++++++++++++++++-----
 1 file changed, 19 insertions(+), 5 deletions(-)

diff --git a/dlls/wined3d/device.c b/dlls/wined3d/device.c
index 206b68cd9d..37c31c366d 100644
--- a/dlls/wined3d/device.c
+++ b/dlls/wined3d/device.c
@@ -848,6 +848,11 @@ static void create_buffer_heap(struct wined3d_device *device, struct wined3d_con
     const struct wined3d_gl_info *gl_info = &device->adapter->gl_info;
     BOOL use_pba = FALSE;
     char *env_pba_disable;
+    int pba_geo_heap = 512; // TODO(acomminos): kill this magic number. perhaps base on vram.
+    int pba_cb_heap = 128;  // We choose a constant buffer size of 128MB, the same as NVIDIA claims to
+                            // use in their Direct3D driver for discarded constant buffers.
+    int env_pba_geo_heap;   // override default with envvar
+    int env_pba_cb_heap;    // override default with envvar
 
     if (!gl_info->supported[ARB_BUFFER_STORAGE])
     {
@@ -859,11 +864,20 @@ static void create_buffer_heap(struct wined3d_device *device, struct wined3d_con
     }
     else
     {
-        // TODO(acomminos): kill this magic number. perhaps base on vram.
-        GLsizeiptr geo_heap_size = 512 * 1024 * 1024;
-        // We choose a constant buffer size of 128MB, the same as NVIDIA claims to
-        // use in their Direct3D driver for discarded constant buffers.
-        GLsizeiptr cb_heap_size = 128 * 1024 * 1024;
+        if ((env_pba_geo_heap = atoi(getenv("__PBA_GEO_HEAP"))) && env_pba_geo_heap != pba_geo_heap)
+        {
+            // TODO(Firerat) at least do some basic tests on supplied size
+            FIXME("found custom geo_heap_size of %imb\n\t\tunset __PBA_GEO_HEAP if you don't want this\n",env_pba_geo_heap);
+            pba_geo_heap = env_pba_geo_heap;
+        }
+        if ((env_pba_cb_heap = atoi(getenv("__PBA_CB_HEAP"))) && env_pba_cb_heap != pba_cb_heap)
+        {
+            // TODO(Firerat) at least do some basic tests on supplied size
+            FIXME("found custom cb_heap_size of %imb\n\t\tunset __PBA_CB_HEAP if you don't want this\n",env_pba_cb_heap);
+            pba_cb_heap = env_pba_cb_heap;
+        }
+        GLsizeiptr geo_heap_size = pba_geo_heap * 1024 * 1024;
+        GLsizeiptr cb_heap_size = pba_cb_heap * 1024 * 1024;
         GLint ub_alignment;
         HRESULT hr;
 
-- 
2.16.2

