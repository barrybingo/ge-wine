diff --git a/patches/0001-wined3d-Initial-implementation-of-a-persistent-mappe.patch b/patches/0001-wined3d-Initial-implementation-of-a-persistent-mappe.patch
index ab14b21..4326d0e 100644
--- a/patches/0001-wined3d-Initial-implementation-of-a-persistent-mappe.patch
+++ b/patches/0001-wined3d-Initial-implementation-of-a-persistent-mappe.patch
@@ -801,6 +801,36 @@ index 8aa61d811f..3d535f4e17 100644
  struct wined3d_buffer
  {
      struct wined3d_resource resource;
+diff --git a/dlls/wined3d/wined3d_main.c b/dlls/wined3d/wined3d_main.c
+index 28e6fe60cf..c084aeab33 100644
+--- a/dlls/wined3d/wined3d_main.c
++++ b/dlls/wined3d/wined3d_main.c
+@@ -92,6 +92,8 @@ struct wined3d_settings wined3d_settings =
+     ~0U,            /* No PS shader model limit by default. */
+     ~0u,            /* No CS shader model limit by default. */
+     FALSE,          /* 3D support enabled by default. */
++    512,            /* geo_heap_size */
++    128,            /* cb_heap_size */
+ };
+ 
+ struct wined3d * CDECL wined3d_create(DWORD flags)
+@@ -321,6 +323,16 @@ static BOOL wined3d_dll_init(HINSTANCE hInstDLL)
+             TRACE("Disabling 3D support.\n");
+             wined3d_settings.no_3d = TRUE;
+         }
++        if (!get_config_key(hkey, appkey, "geo_heap", buffer, size ) )
++        {
++            wined3d_settings.geo_heap = atoi(buffer);
++            ERR_(winediag)("found manual geo_heap_size of \"%imb\".\n", wined3d_settings.geo_heap);
++        }
++        if (!get_config_key(hkey, appkey, "cb_heap", buffer, size ))
++        {
++            wined3d_settings.cb_heap = atoi(buffer);
++            ERR_(winediag)("found manual cb_heap_size of \"%imb\".\n", wined3d_settings.cb_heap );
++        }
+     }
+ 
+     if (appkey) RegCloseKey( appkey );
 -- 
 2.16.2
 
diff --git a/patches/0008-wined3d-Add-DISABLE_PBA-envvar-some-PBA-cleanup.patch b/patches/0008-wined3d-Add-DISABLE_PBA-envvar-some-PBA-cleanup.patch
index 3309836..c020657 100644
--- a/patches/0008-wined3d-Add-DISABLE_PBA-envvar-some-PBA-cleanup.patch
+++ b/patches/0008-wined3d-Add-DISABLE_PBA-envvar-some-PBA-cleanup.patch
@@ -133,10 +133,10 @@ index 785841a062..f4c9dc7bd6 100644
 +    else
 +    {
 +        // TODO(acomminos): kill this magic number. perhaps base on vram.
-+        GLsizeiptr geo_heap_size = 512 * 1024 * 1024;
++        GLsizeiptr geo_heap_size = wined3d_settings.geo_heap * 1024 * 1024;
 +        // We choose a constant buffer size of 128MB, the same as NVIDIA claims to
 +        // use in their Direct3D driver for discarded constant buffers.
-+        GLsizeiptr cb_heap_size = 128 * 1024 * 1024;
++        GLsizeiptr cb_heap_size = wined3d_settings.cb_heap * 1024 * 1024;
 +        GLint ub_alignment;
 +        HRESULT hr;
 +
diff --git a/patches/0009-wined3d-Add-quirk-to-use-GL_CLIENT_STORAGE_BIT-for-m.patch b/patches/0009-wined3d-Add-quirk-to-use-GL_CLIENT_STORAGE_BIT-for-m.patch
index 7d8bbb8..80178bd 100644
--- a/patches/0009-wined3d-Add-quirk-to-use-GL_CLIENT_STORAGE_BIT-for-m.patch
+++ b/patches/0009-wined3d-Add-quirk-to-use-GL_CLIENT_STORAGE_BIT-for-m.patch
@@ -91,6 +91,15 @@ index 63f004d57e..96715261b1 100644
  
  enum wined3d_ffp_idx
  {
+@@ -407,6 +407,8 @@ struct wined3d_settings
+     unsigned int max_sm_ps;
+     unsigned int max_sm_cs;
+     BOOL no_3d;
++    unsigned int geo_heap;
++    unsigned int cb_heap;
+ };
+ 
+ extern struct wined3d_settings wined3d_settings DECLSPEC_HIDDEN; 
 -- 
 2.16.2
 
